name: Publish Surrealist

on:
  workflow_dispatch:
  push:
    tags:
      - 'v**'

permissions: write-all

jobs:
  version:
    name: Extract version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Extract version
        id: extract_version
        uses: Saionaro/extract-package-version@v1.2.1

  embed:
    name: Generate embed files
    runs-on: ubuntu-latest
    needs: version
    strategy:
      matrix:
        node-version: [ 18 ]
    steps:
      - name: Code checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-embed -> target'

      - name: Generate embed
        run: |
          rustup target add wasm32-unknown-unknown
          cargo install wasm-bindgen-cli
          pnpm embed:build

      - name: Save artifacts
        uses: actions/upload-artifact@master
        with:
          name: generated-embed
          path: src/generated

  build-desktop:
    name: Build Desktop
    runs-on: ${{ matrix.platform }}
    needs:
      - version
      - embed
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 18 ]
        platform: [ macos-latest, ubuntu-20.04, windows-latest ]
    steps:
      - name: Information
        run: echo "Building Surrealist version ${{ needs.version.outputs.version }} for ${{ matrix.platform }}"

      - name: Code checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Linux dependencies
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt update
          sudo apt install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev

      - name: Frontend dependencies
        run: |
          pnpm i --frozen-lockfile

      - name: Download embed
        uses: actions/download-artifact@master
        with:
          name: generated-embed
          path: src/generated

      - name: Generate license report
        run: pnpm generate-license-report

      - name: Build application
        run: pnpm tauri build

      - name: Upload bundles
        uses: actions/upload-artifact@v2
        with:
          name: bundles-${{ matrix.platform }}
          path: ./src-tauri/target/release/bundle
  release-desktop:
    name: Release binaries
    runs-on: ubuntu-20.04
    needs:
      - version
      - build-desktop
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Debug
        run: |
          sudo apt install tree
          tree

      - name: Rename binaries
        run: |
          mv ./bundles-macos-latest/dmg/Surrealist_${{ needs.version.outputs.version }}_x64.dmg ./surrealist-${{ github.ref_name }}-darwin.dmg
          mv ./bundles-ubuntu-20.04/appimage/surrealist_${{ needs.version.outputs.version }}_amd64.AppImage ./surrealist-${{ github.ref_name }}-linux.AppImage
          mv ./bundles-ubuntu-20.04/deb/surrealist_${{ needs.version.outputs.version }}_amd64.deb ./surrealist-${{ github.ref_name }}-linux.deb
          mv ./bundles-windows-latest/msi/Surrealist_${{ needs.version.outputs.version }}_x64_en-US.msi ./surrealist-${{ github.ref_name }}-windows.msi

      - name: Draft release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ github.ref_name }}"
          prerelease: false
          draft: true
          title: "${{ github.ref_name }}"
          files: |
            ./surrealist-${{ github.ref_name }}-darwin.dmg
            ./surrealist-${{ github.ref_name }}-linux.AppImage
            ./surrealist-${{ github.ref_name }}-linux.deb
            ./surrealist-${{ github.ref_name }}-windows.msi

  build-web:
    name: Build Web
    runs-on: "ubuntu-20.04"
    needs:
      - version
      - embed
    strategy:
      fail-fast: false
      matrix:
        node-version: [ 18 ]
    steps:
      - name: Information
        run: echo "Building Surrealist version ${{ needs.version.outputs.version }} for web"

      - name: Code checkout
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Frontend dependencies
        run: |
          pnpm i --frozen-lockfile

      - name: Download embed
        uses: actions/download-artifact@master
        with:
          name: generated-embed
          path: src/generated

      - name: Generate license report
        run: pnpm generate-license-report

      - name: Build application
        run: pnpm build

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          aws-access-key-id: ${{ secrets.AMAZON_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AMAZON_SECRET_KEY }}

      - name: Upload web app
        run: make deploy

  sync-web:
    name: Sync S3 deployment
    needs:
      - version
      - build-web
    runs-on: ubuntu-latest
    strategy:
      matrix:
        region: [af-south-1, ap-east-1, ap-south-1, ap-southeast-1, ap-southeast-2, ca-central-1, eu-central-1, eu-west-2, me-south-1, sa-east-1, us-west-2]
    steps:
    - uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-east-2
        aws-access-key-id: ${{ secrets.AMAZON_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AMAZON_SECRET_KEY }}
    - run: aws s3 sync --delete --exact-timestamp --source-region eu-west-2 --region ${{ matrix.region }} s3://www.surrealist.app s3://www.${{ matrix.region }}.surrealist.app
